# https://taskfile.dev

version: '3'

interval: '500ms'
set: [pipefail]

tasks:
  default:
    cmds:
      - task: build

  build:
    desc: Build server
    cmd: shards build

  spec:
    desc: Run specs
    aliases: [test]
    cmds:
      - KEMAL_ENV=test crystal spec -v {{ .CLI_ARGS }}
    sources:
      - src/**/*.cr
      - src/**/*.ecr
      - spec/**/*.cr
    method: timestamp

  clean:
    desc: Clean build
    cmd: rm -rf dist

  dist:
    desc: Build distribution
    deps: [dist-bin, dist-assets]

  release:
    desc: Cut a new release
    env:
      VERSION: "{{ .CLI_ARGS }}"
    cmds:
      - |
          sed -i -e "s/version: $(shards version)/version: $VERSION/" shard.yml
      - git add shard.yml
      - git commit -m"Release $VERSION"
      - git tag $VERSION
    preconditions:
      - sh: '[[ -n "$VERSION" ]]'
        msg: Please supply a valid version on the command line after '--'
      - sh: '[[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]'
        msg: Version must be in X.Y.Z format
      - sh: '! git rev-parse $VERSION'
        msg: Version {{ .CLI_ARGS }} already exists
      - sh: git diff --exit-code
        msg: Unstaged changes present
      - sh: git diff --cached --exit-code
        msg: Staged changes present

  dist-dir:
    internal: true
    run: once
    cmds:
      - mkdir -p dist/bin
    generates:
      - dist
    status:
      - test -d dist/bin

  dist-bin:
    internal: true
    deps: [dist-dir]
    cmds:
      - crystal build src/server.cr -o dist/bin/server --release
    sources:
      - src/**/*
      - lib/**/*
    generates:
      - dist/bin/server

  dist-assets:
    internal: true
    deps: [dist-dir]
    cmds:
      - cp -r public dist/
    sources:
      - public/**/*
    generates:
      - dist/public/**/*
